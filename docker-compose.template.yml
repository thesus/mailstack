version: "3.5"

{{ define "certificates" }}
{{- if eq .ssl.certificate "caddy" -}}
      {{- $base_path := print "/etc/certificates/acme/acme-v02.api.letsencrypt.org/sites/" .address "/" -}}
      CERT_PATH: {{ $base_path }}{{ .address }}.crt
      KEY_PATH: {{ $base_path }}{{ .address }}.key
{{- else -}}
      CERT_PATH: {{ with .ssl.cert_path }}{{ . }}{{ else }}/etc/certificates/cert.pem{{ end }}
      KEY_PATH: {{ with .ssl.key_path }}{{ . }}{{ else }}/etc/certificates/key.pem{{ end }}
{{- end -}}
{{- end -}}


{{- $ldap := print "dc=" (replace .domain "." ",dc=") -}}
{{- $search_base := ifthen .ldap.included (print "ou=People," $ldap) .ldap.search_base -}}
{{- define "additional_domains_comma"}}{{ range .additional_domains }}, {{ .x }}{{end}}{{end}}
{{- define "additional_domains_space"}}{{ range .additional_domains }} {{ .x }}{{end}}{{end}}


services:
  postfix:
    image: dev.cryptec.at:5000/infrastructure/mailstack/postfix:master
    {{ if .compose.include_build_settings -}}
    build: ./postfix
    {{ end -}}
    labels: &labels
      at.cryptec.dev.infrastructure.mailstack.version: "0.4.0"
    environment:
      POSTFIX_MYORIGIN: {{ .domain }}
      POSTFIX_MYDOMAIN: {{ .domain }}
      POSTFIX_MYHOSTNAME: {{ .address }}
      POSTFIX_VIRTUAL_MAILBOX_DOMAINS: {{ .domain }} {{- template "additional_domains_comma" . }}
      POSTFIX_LDAP_BIND_DN: {{ .postfix.ldap.bind_dn }}
      POSTFIX_LDAP_BIND_PASSWORD: {{ .postfix.ldap.bind_pw }}
      POSTFIX_LDAP_SEARCH_BASE: {{ $search_base }}
      POSTFIX_LDAP_USERNAME_ATTRIBUTE: {{ .ldap.username_attribute }}
      POSTFIX_LDAP_HOST: {{ .ldap.server }}
      POSTFIX_LDAP_DOMAIN: {{ .domain }} {{- template "additional_domains_comma" . }}
      {{ template "certificates" .}}
    ports:
      - "25:25"
      - "587:587"
    networks:
      - internal
      {{- if not .ldap.included }}
      - auth.mailstack.postfix
      {{- end }}
    volumes:
      - type: volume
        source: certificates
        target: /etc/certificates
        read_only: yes
      - type: bind
        source: ./postfix-aliases
        target: /etc/postfix/aliases
        read_only: yes
    restart: always

  dovecot:
    image: dev.cryptec.at:5000/infrastructure/mailstack/dovecot:master
    {{ if .compose.include_build_settings -}}
    build: ./dovecot
    {{ end -}}
    labels:
      <<: *labels
    environment:
      DOVECOT_MAIL_DOMAIN: {{ .domain }}
      DOVECOT_LDAP_BIND_DN: {{ .dovecot.ldap.bind_dn }}
      DOVECOT_LDAP_BIND_PASSWORD: {{ .dovecot.ldap.bind_pw }}
      DOVECOT_LDAP_SEARCH_BASE: {{ $search_base }}
      DOVECOT_LDAP_USER_OBJECT_CLASS: {{ .ldap.user_objectclass }}
      DOVECOT_LDAP_USERNAME_ATTRIBUTE: {{ .ldap.username_attribute }}
      DOVECOT_LDAP_HOST: {{ .ldap.server }}
      DOVECOT_IMAP_LOGIN_PERFORMANCE_MODE: "{{ .dovecot.imap_login_performance_mode }}"
      DOVECOT_MAIL_MAX_USERIP_CONNECTIONS: "{{ .dovecot.mail_max_userip_connections }}"
      {{ template "certificates" .}}
    ports:
      - "143:143"
      - "993:993"
      - "110:110"
      - "995:995"
    {{ if .dovecot.publish_sieve_port }}
      - "4190:4190"
    {{ end }}
    volumes:
      - type: volume
        source: mailboxes
        target: /var/vmail
      - type: volume
        source: dovecot-data
        target: /usr/lib/dovecot/dhparams
      - type: volume
        source: certificates
        target: /etc/certificates
        read_only: yes
    networks:
      - internal
      {{- if not .ldap.included }}
      - auth.mailstack.dovecot
      {{- end }}
    restart: always

  sogo:
    image: dev.cryptec.at:5000/infrastructure/mailstack/sogo:master
    {{ if .compose.include_build_settings -}}
    build: ./sogo
    {{ end -}}
    user: sogo
    labels:
      <<: *labels
    environment:
      SOGO_MAIL_DOMAIN: {{ .domain }}
      SOGO_LDAP_HOST: {{ ifthen .ldap.tls "ldaps://" "ldap://" }}{{ .ldap.server }}
      SOGO_LDAP_BIND_DN: {{ .sogo.ldap.bind_dn }}
      SOGO_LDAP_BIND_PASSWORD: {{ .sogo.ldap.bind_pw }}
      # SoGo's term for search base
      SOGO_LDAP_BASE_DN: {{ $search_base }}
      SOGO_LDAP_USERNAME_ATTRIBUTE: {{ .ldap.username_attribute }}
      SOGO_WORKER_COUNT: {{ .sogo.worker_count }}
      SOGO_APPOINTMENT_SEND_EMAIL_NOTIFICATIONS: "{{ .sogo.appointment_send_email_notifications }}"
      SOGO_ACLS_SEND_EMAIL_NOTIFICATIONS: "{{ .sogo.acls_send_email_notifications }}"
      SOGO_FOLDERS_SEND_EMAIL_NOTIFICATIONS: "{{ .sogo.folders_send_email_notifications }}"
      SOGO_SX_VMEM_LIMIT: "{{ .sogo.sx_vmem_limit }}"
      ENABLE_DEBUG: "{{ .sogo.debug }}"
      POSTGRES_USER: {{ .postgres.user }}
      POSTGRES_PASSWORD: {{ .postgres.password }}
      POSTGRES_DB: {{ .postgres.db }}
    networks:
      - internal
      - database
      - sogo.cache
      - sogo.proxy
      {{- if not .ldap.included }}
      - auth.mailstack.sogo
      {{- end }}
    volumes:
      - type: volume
        source: sogo-web
        target: /usr/lib/GNUstep/SOGo/WebServerResources
    restart: always

  memcached:
    image: memcached:alpine
    labels:
      <<: *labels
    networks:
      - sogo.cache
    restart: always

  postgres:
    image: postgres:10
    labels:
      <<: *labels
    restart: always
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_USER: {{ .postgres.user }}
      POSTGRES_PASSWORD: {{ .postgres.password }}
      POSTGRES_DB: {{ .postgres.db }}
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - database
    restart: always

  caddy:
    image: dev.cryptec.at:5000/infrastructure/mailstack/caddy:master
    {{ if .compose.include_build_settings -}}
    build: ./caddy
    {{ end -}}
    labels:
      <<: *labels
    networks:
      - sogo.proxy
      {{- if and .rspamd.webinterface.enable (not .rspamd.webinterface.internal) }}
      - rspamd.proxy
      {{- end }}
      {{- if .caddy.internal }}
      - expose.mailstack.caddy
      {{- end }}
    volumes:
      - type: volume
        source: sogo-web
        target: /etc/sogo/resources
      {{- if not .caddy.internal }}
      - type: volume
        source: certificates
        target: /etc/certificates
      {{- end }}
    {{- if not .caddy.internal }}
    ports:
      - "80:80"
      - "443:443"
      {{- /* If no domain is set, the webinterface is enabled and not directly published */ -}}
      {{- if and (not .rspamd.webinterface.domain) (and .rspamd.webinterface.enable (not .rspamd.webinterface.internal)) }}
      - "11334:11334"
      {{- end }}
    {{- end }}
    environment:
      ADDRESS: {{ .address }}
      CERTIFICATE: "{{ .ssl.certificate }}"
      INTERNAL: "{{ .caddy.internal }}"
      SERVER_IP: {{ .caddy.ip_address }}
      EMAIL: {{ .caddy.email }}
      {{ template "certificates" .}}
      {{- if and .rspamd.webinterface.enable (not .rspamd.webinterface.internal) }}
      {{- if .rspamd.webinterface.domain }}
      RSPAMD_DOMAIN: {{ .rspamd.webinterface.domain }}
      {{- end }}
      RSPAMD_PROXY: "true"
      {{- end }}
    restart: always

  rspamd:
    image: dev.cryptec.at:5000/infrastructure/mailstack/rspamd:master
    {{ if .compose.include_build_settings -}}
    build: ./rspamd
    {{ end -}}
    labels:
      <<: *labels
    networks:
      {{- /* Connection to dovecot and postfix */}}
      - internal
      {{- /* Connection to redis */}}
      - rspamd.database
      {{- if and .rspamd.webinterface.enable (not .rspamd.webinterface.internal) }}
      - rspamd.proxy
      {{- end }}
      {{- if and .rspamd.webinterface.enable .rspamd.webinterface.internal }}
      - expose.mailstack.rspamd
      {{- end }}
    environment:
      {{- /* Because rspamd takes a hashed password all dollarsigns need to be escaped */}}
      RSPAMD_WEBINTERFACE_PASSWORD: {{ replace .rspamd.controller.password "$" "$$" }}
      RSPAMD_WEBINTERFACE_ENABLE_PASSWORD: {{ replace .rspamd.controller.enable_password "$" "$$" }}
    volumes:
      - rspamd-data:/var/lib/rspamd
    restart: always

  redis:
    image: redis:latest
    command: ["redis-server", "--appendonly", "yes"]
    labels:
      <<: *labels
    networks:
      - rspamd.database
    volumes:
      - redis-data:/data
    restart: always

  {{- if .ldap.included }}
  ldap:
    image: dev.cryptec.at:5000/infrastructure/ldap:latest
    labels:
      <<: *labels
    networks:
      - internal
    volumes:
      - ldap-conf:/etc/ldap
      - ldap-data:/var/lib/ldap
    environment:
      SLAPD_DOMAIN: {{ .domain }}
      SLAPD_PASSWORD: {{ .ldap.admin_pw }}
    restart: always
  {{- end }}

volumes:
  mailboxes:
  dovecot-data:
  postgres-data:
  sogo-web:
  rspamd-data:
  redis-data:
  {{- if .ldap.included }}
  ldap-conf:
  ldap-data:
  {{- end }}
  certificates:
    external:
      name: certificates

networks:
  internal:
  database:
  sogo.proxy:
  sogo.cache:
  rspamd.database:
  {{- if and .rspamd.webinterface.enable (not .rspamd.webinterface.internal) }}
  rspamd.proxy:
  {{- end }}


  {{- if not .ldap.included }}
  auth.mailstack.postfix:
    external:
      name: auth.mailstack.postfix
  auth.mailstack.dovecot:
    external:
      name: auth.mailstack.dovecot
  auth.mailstack.sogo:
    external:
      name: auth.mailstack.sogo
  {{- end }}

  {{- if .caddy.internal }}
  expose.mailstack.caddy:
    external:
      name: expose.mailstack.caddy
  {{- end }}

  {{- if and .rspamd.webinterface.enable .rspamd.webinterface.internal }}
  expose.mailstack.rspamd:
    external:
      name: expose.mailstack.rspamd
  {{- end }}
